#
msgid ""
msgstr ""

#: infra-digital-certificate/get-started/sdk.md:block 1 (header)
msgid "SDK"
msgstr ""

#: infra-digital-certificate/get-started/sdk.md:block 2 (header)
msgid "Language"
msgstr ""

#: infra-digital-certificate/get-started/sdk.md:block 3 (paragraph)
msgid ""
"InfraBlockchain은 현재 JavaScript, TypeScript를 지원합니다. 모든 가이드는 현재 지원되고 있는 언어들에 "
"대한 예제를 제공하고 있고, 계속해서 더 다양한 언어를 지원하기 위해 노력하고 있습니다."
msgstr ""

#: infra-digital-certificate/get-started/sdk.md:block 4 (paragraph)
msgid "이후의 가이드들에서 JavaScript와 TypeScript는 JS로 통합하여 표현하겠습니다."
msgstr ""

#: infra-digital-certificate/get-started/sdk.md:block 5 (header)
msgid "Installation"
msgstr ""

#: infra-digital-certificate/get-started/sdk.md:block 6 (paragraph)
msgid "{% tabs %} {% tab title=\"JS\" %}"
msgstr ""

#: infra-digital-certificate/get-started/sdk.md:block 8 (paragraph)
msgid "{% endtab %} {% endtabs %}"
msgstr ""

#: infra-digital-certificate/get-started/sdk.md:block 9 (header)
msgid "Import"
msgstr ""

#: infra-digital-certificate/get-started/sdk.md:block 10 (paragraph)
msgid ""
"Please make sure that [Node.js](https://nodejs.org/) (version >= 12, except "
"for v13) is installed on your operating system."
msgstr ""

#: infra-digital-certificate/get-started/sdk.md:block 11 (paragraph)
msgid "**Setup**[**#**](https://docs.nestjs.com/first-steps#setup)"
msgstr ""

#: infra-digital-certificate/get-started/sdk.md:block 12 (paragraph)
msgid ""
"Setting up a new project is quite simple with the [Nest "
"CLI](https://docs.nestjs.com/cli/overview). With "
"[npm](https://www.npmjs.com/) installed, you can create a new Nest project "
"with the following commands in your OS terminal:"
msgstr ""

#: infra-digital-certificate/get-started/sdk.md:block 14 (quote)
msgid ""
"**HINT**To create a new project with TypeScript's "
"[strict](https://www.typescriptlang.org/tsconfig#strict) mode enabled, pass "
"the `--strict` flag to the `nest new` command."
msgstr ""

#: infra-digital-certificate/get-started/sdk.md:block 15 (paragraph)
msgid ""
"The `project-name` directory will be created, node modules and a few other "
"boilerplate files will be installed, and a `src/` directory will be created "
"and populated with several core files."
msgstr ""

#: infra-digital-certificate/get-started/sdk.md:block 16 (paragraph)
msgid ""
"srcapp.controller.spec.tsapp.controller.tsapp.module.tsapp.service.tsmain.ts"
msgstr ""

#: infra-digital-certificate/get-started/sdk.md:block 17 (paragraph)
msgid "Here's a brief overview of those core files:"
msgstr ""

#: infra-digital-certificate/get-started/sdk.md:block 18 (table)
msgid "`app.controller.ts`"
msgstr ""

#: infra-digital-certificate/get-started/sdk.md:block 18 (table)
msgid "A basic controller with a single route."
msgstr ""

#: infra-digital-certificate/get-started/sdk.md:block 18 (table)
msgid "`app.controller.spec.ts`"
msgstr ""

#: infra-digital-certificate/get-started/sdk.md:block 18 (table)
msgid "The unit tests for the controller."
msgstr ""

#: infra-digital-certificate/get-started/sdk.md:block 18 (table)
msgid "`app.module.ts`"
msgstr ""

#: infra-digital-certificate/get-started/sdk.md:block 18 (table)
msgid "The root module of the application."
msgstr ""

#: infra-digital-certificate/get-started/sdk.md:block 18 (table)
msgid "`app.service.ts`"
msgstr ""

#: infra-digital-certificate/get-started/sdk.md:block 18 (table)
msgid "A basic service with a single method."
msgstr ""

#: infra-digital-certificate/get-started/sdk.md:block 18 (table)
msgid "`main.ts`"
msgstr ""

#: infra-digital-certificate/get-started/sdk.md:block 18 (table)
msgid ""
"The entry file of the application which uses the core function `NestFactory`"
" to create a Nest application instance."
msgstr ""

#: infra-digital-certificate/get-started/sdk.md:block 19 (paragraph)
msgid ""
"The `main.ts` includes an async function, which will **bootstrap** our "
"application:"
msgstr ""

#: infra-digital-certificate/get-started/sdk.md:block 20 (paragraph)
msgid "main.tsJS"
msgstr ""

#: infra-digital-certificate/get-started/sdk.md:block 22 (paragraph)
msgid ""
"To create a Nest application instance, we use the core `NestFactory` class. "
"`NestFactory` exposes a few static methods that allow creating an "
"application instance. The `create()` method returns an application object, "
"which fulfills the `INestApplication` interface. This object provides a set "
"of methods which are described in the coming chapters. In the `main.ts` "
"example above, we simply start up our HTTP listener, which lets the "
"application await inbound HTTP requests."
msgstr ""

#: infra-digital-certificate/get-started/sdk.md:block 23 (paragraph)
msgid ""
"Note that a project scaffolded with the Nest CLI creates an initial project "
"structure that encourages developers to follow the convention of keeping "
"each module in its own dedicated directory."
msgstr ""

#: infra-digital-certificate/get-started/sdk.md:block 24 (quote)
msgid ""
"**HINT**By default, if any error happens while creating the application your"
" app will exit with the code `1`. If you want to make it throw an error "
"instead disable the option `abortOnError` (e.g., "
"`NestFactory.create(AppModule, { abortOnError: false })`)."
msgstr ""

#: infra-digital-certificate/get-started/sdk.md:block 25 (header)
msgid "Learn the right way!"
msgstr ""

#: infra-digital-certificate/get-started/sdk.md:block 26 (unordered list)
msgid "&#x20;80+ chapters"
msgstr ""

#: infra-digital-certificate/get-started/sdk.md:block 26 (unordered list)
msgid "&#x20;5+ hours of videos"
msgstr ""

#: infra-digital-certificate/get-started/sdk.md:block 26 (unordered list)
msgid "&#x20;Official certificate"
msgstr ""

#: infra-digital-certificate/get-started/sdk.md:block 26 (unordered list)
msgid "&#x20;Deep-dive sessions"
msgstr ""

#: infra-digital-certificate/get-started/sdk.md:block 27 (paragraph)
msgid "[EXPLORE OFFICIAL COURSES](https://courses.nestjs.com/)"
msgstr ""

#: infra-digital-certificate/get-started/sdk.md:block 28 (paragraph)
msgid "**Platform**[**#**](https://docs.nestjs.com/first-steps#platform)"
msgstr ""

#: infra-digital-certificate/get-started/sdk.md:block 29 (paragraph)
msgid ""
"Nest aims to be a platform-agnostic framework. Platform independence makes "
"it possible to create reusable logical parts that developers can take "
"advantage of across several different types of applications. Technically, "
"Nest is able to work with any Node HTTP framework once an adapter is "
"created. There are two HTTP platforms supported out-of-the-box: "
"[express](https://expressjs.com/) and [fastify](https://www.fastify.io/). "
"You can choose the one that best suits your needs."
msgstr ""

#: infra-digital-certificate/get-started/sdk.md:block 30 (table)
msgid "`platform-express`"
msgstr ""

#: infra-digital-certificate/get-started/sdk.md:block 30 (table)
msgid ""
"[Express](https://expressjs.com/) is a well-known minimalist web framework "
"for node. It's a battle tested, production-ready library with lots of "
"resources implemented by the community. The `@nestjs/platform-express` "
"package is used by default. Many users are well served with Express, and "
"need take no action to enable it."
msgstr ""

#: infra-digital-certificate/get-started/sdk.md:block 30 (table)
msgid "`platform-fastify`"
msgstr ""

#: infra-digital-certificate/get-started/sdk.md:block 30 (table)
msgid ""
"[Fastify](https://www.fastify.io/) is a high performance and low overhead "
"framework highly focused on providing maximum efficiency and speed. Read how"
" to use it [here](https://docs.nestjs.com/techniques/performance)."
msgstr ""

#: infra-digital-certificate/get-started/sdk.md:block 31 (paragraph)
msgid ""
"Whichever platform is used, it exposes its own application interface. These "
"are seen respectively as `NestExpressApplication` and "
"`NestFastifyApplication`."
msgstr ""

#: infra-digital-certificate/get-started/sdk.md:block 32 (paragraph)
msgid ""
"When you pass a type to the `NestFactory.create()` method, as in the example"
" below, the `app` object will have methods available exclusively for that "
"specific platform. Note, however, you don't **need** to specify a type "
"**unless** you actually want to access the underlying platform API."
msgstr ""

#: infra-digital-certificate/get-started/sdk.md:block 34 (paragraph)
msgid ""
"**Running the application**[**#**](https://docs.nestjs.com/first-"
"steps#running-the-application)"
msgstr ""

#: infra-digital-certificate/get-started/sdk.md:block 35 (paragraph)
msgid ""
"Once the installation process is complete, you can run the following command"
" at your OS command prompt to start the application listening for inbound "
"HTTP requests:"
msgstr ""

#: infra-digital-certificate/get-started/sdk.md:block 37 (paragraph)
msgid ""
"This command starts the app with the HTTP server listening on the port "
"defined in the `src/main.ts` file. Once the application is running, open "
"your browser and navigate to `http://localhost:3000/`. You should see the "
"`Hello World!` message."
msgstr ""

#: infra-digital-certificate/get-started/sdk.md:block 38 (paragraph)
msgid ""
"To watch for changes in your files, you can run the following command to "
"start the application:"
msgstr ""

#: infra-digital-certificate/get-started/sdk.md:block 40 (paragraph)
msgid ""
"This command will watch your files, automatically recompiling and reloading "
"the server."
msgstr ""

#: infra-digital-certificate/get-started/sdk.md:block 41 (paragraph)
msgid "\\"
msgstr ""
