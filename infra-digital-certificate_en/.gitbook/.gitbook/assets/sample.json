{
  "openapi": "3.0.0",
  "paths": {
    "/vc-templates": {
      "post": {
        "operationId": "IssueController_createVCTemplate",
        "summary": "Create VC template",
        "description": "VC 발급을 위한 템플릿을 생성합니다.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateVCTemplateBodyDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The resource was created"
          },
          "400": {
            "description": "The request is not valid"
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "The server understands the request but refuses to authorize it."
          },
          "422": {
            "description": "The server understood the request and the syntax is correct, but could not fulfill the request"
          },
          "500": {
            "description": "An unexpected error occurred inside the server"
          }
        },
        "tags": [
          "Issuer Node API"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "IssueController_getVCTemplates",
        "summary": "Get VC templates",
        "description": "VC 템플릿 목록을 가져옵니다. 검색 및 정렬하여 가져올 수도 있습니다.",
        "parameters": [
          {
            "name": "search",
            "required": false,
            "in": "query",
            "example": "vaccine",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "example": "name",
            "schema": {
              "enum": [
                "name",
                "createdAt"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetVCTemplatesResponseDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request is not valid"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "An unexpected error occurred inside the server"
          }
        },
        "tags": [
          "Issuer Node API"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vc-templates/{id}": {
      "get": {
        "operationId": "IssueController_getVCTemplateById",
        "summary": "Get VC template by id",
        "description": "VC 템플릿을 가져옵니다.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVCTemplateByIdResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "The request is not valid"
          },
          "401": {
            "description": "Authentication failed"
          },
          "404": {
            "description": "No resources found matching the given id"
          },
          "500": {
            "description": "An unexpected error occurred inside the server"
          }
        },
        "tags": [
          "Issuer Node API"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "IssueController_deleteVCTemplate",
        "summary": "Delete VC template by id",
        "description": "VC 템플릿을 삭제합니다.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful"
          },
          "400": {
            "description": "The request is not valid"
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "The server understands the request but refuses to authorize it."
          },
          "404": {
            "description": "No resources found matching the given id"
          },
          "422": {
            "description": "The server understood the request and the syntax is correct, but could not fulfill the request"
          },
          "500": {
            "description": "An unexpected error occurred inside the server"
          }
        },
        "tags": [
          "Issuer Node API"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vc-requests": {
      "post": {
        "operationId": "IssueController_createVCIssuanceRequest",
        "summary": "Create VC issuance request",
        "description": "VC 발급을 요청합니다.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateVCRequestBodyDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The resource was created"
          },
          "400": {
            "description": "The request is not valid"
          },
          "401": {
            "description": "Authentication failed"
          },
          "422": {
            "description": "The server understood the request and the syntax is correct, but could not fulfill the request"
          },
          "500": {
            "description": "An unexpected error occurred inside the server"
          }
        },
        "tags": [
          "Issuer Node API"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "IssueController_getVCIssuanceRequest",
        "summary": "Get VC issuance requests",
        "description": "VC 발급 요청 목록을 가져옵니다.",
        "parameters": [
          {
            "name": "status",
            "required": false,
            "in": "query",
            "schema": {
              "enum": [
                "pending",
                "approved",
                "rejected",
                "canceled"
              ],
              "type": "string"
            }
          },
          {
            "name": "holderDID",
            "required": false,
            "in": "query",
            "example": "did:infra:01:PUB_K1_8KeFXUKBR9kctm3eafs2tgqK3XxcqsnHtRp2kjSdfDFSn3x4bK",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vcTemplateId",
            "required": false,
            "in": "query",
            "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetVCIssueanceRequestReponseDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request is not valid"
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "The server understands the request but refuses to authorize it."
          },
          "500": {
            "description": "An unexpected error occurred inside the server"
          }
        },
        "tags": [
          "Issuer Node API"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vc-requests/{id}/approve": {
      "post": {
        "operationId": "IssueController_approveVCIssuanceRequest",
        "summary": "Approve VC issuance request",
        "description": "VC 발급 요청을 수락합니다.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApproveVCIssuanceRequestResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "The request is not valid"
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "The server understands the request but refuses to authorize it."
          },
          "404": {
            "description": "No resources found matching the given id"
          },
          "422": {
            "description": "The server understood the request and the syntax is correct, but could not fulfill the request"
          },
          "500": {
            "description": "An unexpected error occurred inside the server"
          }
        },
        "tags": [
          "Issuer Node API"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vc-requests/{id}/reject": {
      "post": {
        "operationId": "IssueController_rejectVCIssuanceRequest",
        "summary": "Reject VC issuance request",
        "description": "VC 발급 요청을 거절합니다.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful"
          },
          "400": {
            "description": "The request is not valid"
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "The server understands the request but refuses to authorize it."
          },
          "404": {
            "description": "No resources found matching the given id"
          },
          "422": {
            "description": "The server understood the request and the syntax is correct, but could not fulfill the request"
          },
          "500": {
            "description": "An unexpected error occurred inside the server"
          }
        },
        "tags": [
          "Issuer Node API"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vc-requests/{id}": {
      "delete": {
        "operationId": "IssueController_cencelVCIssuanceRequest",
        "summary": "Cancel VC issuance request",
        "description": "VC 발급 요청을 취소합니다.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful"
          },
          "400": {
            "description": "The request is not valid"
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "The server understands the request but refuses to authorize it."
          },
          "404": {
            "description": "No resources found matching the given id"
          },
          "422": {
            "description": "The server understood the request and the syntax is correct, but could not fulfill the request"
          },
          "500": {
            "description": "An unexpected error occurred inside the server"
          }
        },
        "tags": [
          "Issuer Node API"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vcs": {
      "get": {
        "operationId": "IssueController_getVCs",
        "summary": "Get issued VCs",
        "description": "발급된 VC 목록을 가져옵니다.",
        "parameters": [
          {
            "name": "holderDID",
            "required": false,
            "in": "query",
            "example": "did:infra:01:PUB_K1_8KeFXUKBR9kctm3eafs2tgqK3XxcqsnHtRp2kjSdfDFSn3x4bK",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vcTemplateId",
            "required": false,
            "in": "query",
            "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetVCsResponseDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request is not valid"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "An unexpected error occurred inside the server"
          }
        },
        "tags": [
          "Issuer Node API"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vcs/{id}/revoke": {
      "post": {
        "operationId": "IssueController_revokeVC",
        "summary": "Revoke VC",
        "description": "발급된 VC를 폐기(revoke) 합니다.",
        "parameters": [
          {
            "name": "did",
            "required": true,
            "in": "path",
            "example": "did:infra:01:PUB_K1_8KeFXUKBR9kctm3eafs2tgqK3XxcqsnHtRp2kjSdfDFSn3x4bK",
            "schema": {
              "format": "InfraDID",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful"
          },
          "400": {
            "description": "The request is not valid"
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "The server understands the request but refuses to authorize it."
          },
          "404": {
            "description": "No resources found matching the given id"
          },
          "422": {
            "description": "The server understood the request and the syntax is correct, but could not fulfill the request"
          },
          "500": {
            "description": "An unexpected error occurred inside the server"
          }
        },
        "tags": [
          "Issuer Node API"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vp-templates": {
      "post": {
        "operationId": "VerifyController_createVPTemplate",
        "summary": "Create VP template",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateVPTemplateBodyDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The resource was created"
          },
          "400": {
            "description": "The request is not valid"
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "The server understands the request but refuses to authorize it."
          },
          "422": {
            "description": "The server understood the request and the syntax is correct, but could not fulfill the request"
          },
          "500": {
            "description": "An unexpected error occurred inside the server"
          }
        },
        "tags": [
          "Verifier Node API"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "VerifyController_getVPTemplates",
        "summary": "Get VP templates",
        "parameters": [
          {
            "name": "search",
            "required": false,
            "in": "query",
            "example": "vaccine",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "example": "name",
            "schema": {
              "enum": [
                "name",
                "createdAt"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetVPTemplatesResponseDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request is not valid"
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "The server understands the request but refuses to authorize it."
          },
          "500": {
            "description": "An unexpected error occurred inside the server"
          }
        },
        "tags": [
          "Verifier Node API"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vp-templates/{id}": {
      "get": {
        "operationId": "VerifyController_getVPTemplateById",
        "summary": "Get VP templates by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVPTemplateByIdResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "The request is not valid"
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "The server understands the request but refuses to authorize it."
          },
          "404": {
            "description": "No resources found matching the given id"
          },
          "500": {
            "description": "An unexpected error occurred inside the server"
          }
        },
        "tags": [
          "Verifier Node API"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "VerifyController_editVPTemplate",
        "summary": "Edit VP template",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditVPTemplateBodyDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The request was successful"
          },
          "400": {
            "description": "The request is not valid"
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "The server understands the request but refuses to authorize it."
          },
          "404": {
            "description": "No resources found matching the given id"
          },
          "500": {
            "description": "An unexpected error occurred inside the server"
          }
        },
        "tags": [
          "Verifier Node API"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "VerifyController_deleteVPTemplate",
        "summary": "Delete VP template",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful"
          },
          "400": {
            "description": "The request is not valid"
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "The server understands the request but refuses to authorize it."
          },
          "404": {
            "description": "No resources found matching the given id"
          },
          "422": {
            "description": "The server understood the request and the syntax is correct, but could not fulfill the request"
          },
          "500": {
            "description": "An unexpected error occurred inside the server"
          }
        },
        "tags": [
          "Verifier Node API"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vp-requests": {
      "post": {
        "operationId": "VerifyController_createVPVerificationRequest",
        "summary": "Create VP verification request",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateVPVerificationRequestBodyDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The resource was created"
          },
          "400": {
            "description": "The request is not valid"
          },
          "401": {
            "description": "Authentication failed"
          },
          "404": {
            "description": "No resources found matching the given id"
          },
          "500": {
            "description": "An unexpected error occurred inside the server"
          }
        },
        "tags": [
          "Verifier Node API"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "VerifyController_getVPVerificationRequests",
        "summary": "Get VP verification requests",
        "parameters": [
          {
            "name": "status",
            "required": false,
            "in": "query",
            "example": "pending",
            "schema": {
              "enum": [
                "pending",
                "vpSubmitted",
                "rejected",
                "canceled"
              ],
              "type": "string"
            }
          },
          {
            "name": "result",
            "required": false,
            "in": "query",
            "schema": {
              "enum": [
                "passed",
                "failed"
              ],
              "type": "string"
            }
          },
          {
            "name": "vpTemplateId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "UUID",
              "type": "string"
            }
          },
          {
            "name": "holderDID",
            "required": false,
            "in": "query",
            "schema": {
              "format": "InfraDID",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetVPVerificationRequestsResponseDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request is not valid"
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "The server understands the request but refuses to authorize it."
          },
          "500": {
            "description": "An unexpected error occurred inside the server"
          }
        },
        "tags": [
          "Verifier Node API"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vp-requests/{id}": {
      "get": {
        "operationId": "VerifyController_getVPVerificationRequestById",
        "summary": "Get VP verification request by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVPVerificationRequestByIdResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "The request is not valid"
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "The server understands the request but refuses to authorize it."
          },
          "404": {
            "description": "No resources found matching the given id"
          },
          "500": {
            "description": "An unexpected error occurred inside the server"
          }
        },
        "tags": [
          "Verifier Node API"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vp-requests/{id}/submit": {
      "post": {
        "operationId": "VerifyController_submitVP",
        "summary": "Submit VP",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmitVPBodyDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The request was successful"
          },
          "400": {
            "description": "The request is not valid"
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "The server understands the request but refuses to authorize it."
          },
          "404": {
            "description": "No resources found matching the given id"
          },
          "422": {
            "description": "The server understood the request and the syntax is correct, but could not fulfill the request"
          },
          "500": {
            "description": "An unexpected error occurred inside the server"
          }
        },
        "tags": [
          "Verifier Node API"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vp-requests/{id}/reject": {
      "post": {
        "operationId": "VerifyController_rejectToSubmitVP",
        "summary": "Reject to submit VP",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful"
          },
          "400": {
            "description": "The request is not valid"
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "The server understands the request but refuses to authorize it."
          },
          "404": {
            "description": "No resources found matching the given id"
          },
          "422": {
            "description": "The server understood the request and the syntax is correct, but could not fulfill the request"
          },
          "500": {
            "description": "An unexpected error occurred inside the server"
          }
        },
        "tags": [
          "Verifier Node API"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/vp-request/{id}": {
      "delete": {
        "operationId": "VerifyController_cancelVerificationRequest",
        "summary": "Cancel VP verification request",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful"
          },
          "400": {
            "description": "The request is not valid"
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "The server understands the request but refuses to authorize it."
          },
          "404": {
            "description": "No resources found matching the given id"
          },
          "422": {
            "description": "The server understood the request and the syntax is correct, but could not fulfill the request"
          },
          "500": {
            "description": "An unexpected error occurred inside the server"
          }
        },
        "tags": [
          "Verifier Node API"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/verify-vp": {
      "post": {
        "operationId": "VerifyController_verifyVP",
        "summary": "Verify VP",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyVPBodyDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The request was successful"
          },
          "400": {
            "description": "The request is not valid"
          },
          "401": {
            "description": "Authentication failed"
          },
          "500": {
            "description": "An unexpected error occurred inside the server"
          }
        },
        "tags": [
          "Verifier Node API"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/verification-histories": {
      "get": {
        "operationId": "VerifyController_getVPverificationHistories",
        "summary": "Get verification histories",
        "parameters": [
          {
            "name": "holderDID",
            "required": false,
            "in": "query",
            "schema": {
              "format": "InfraDID",
              "type": "string"
            }
          },
          {
            "name": "result",
            "required": false,
            "in": "query",
            "example": "passed",
            "schema": {
              "enum": [
                "passed",
                "failed"
              ],
              "type": "string"
            }
          },
          {
            "name": "from",
            "required": false,
            "in": "query",
            "schema": {
              "format": "YYYY-MM-DD",
              "type": "string"
            }
          },
          {
            "name": "to",
            "required": false,
            "in": "query",
            "schema": {
              "format": "YYYY-MM-DD",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVerificationHistoriesResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "The request is not valid"
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "The server understands the request but refuses to authorize it."
          },
          "500": {
            "description": "An unexpected error occurred inside the server"
          }
        },
        "tags": [
          "Verifier Node API"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/verification-histories/{id}": {
      "get": {
        "operationId": "VerifyController_getVPverificationHistoryById",
        "summary": "Get verification history by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVerificationHistoryByIdResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "The request is not valid"
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "The server understands the request but refuses to authorize it."
          },
          "404": {
            "description": "No resources found matching the given id"
          },
          "500": {
            "description": "An unexpected error occurred inside the server"
          }
        },
        "tags": [
          "Verifier Node API"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    }
  },
  "info": {
    "title": "Infra Digital Certificate",
    "description": "The infra digital certificate service API description",
    "version": "0.1",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "VCClaim": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "string",
              "number",
              "boolean"
            ]
          },
          "required": {
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "description",
          "type"
        ]
      },
      "CreateVCTemplateBodyDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "vaccination"
          },
          "description": {
            "type": "string",
            "example": "백신접종 증명서"
          },
          "version": {
            "type": "object",
            "default": "1.0",
            "example": "1.0"
          },
          "claims": {
            "example": [
              {
                "name": "brand",
                "description": "백신 이름",
                "type": "string",
                "required": true
              },
              {
                "name": "doseNum",
                "description": "백신 접종 차수",
                "type": "number",
                "required": true
              },
              {
                "name": "doseDate",
                "description": "백신 접종 일자",
                "type": "string",
                "required": true
              },
              {
                "name": "clinic",
                "description": "백신 접종기관 이름",
                "type": "string",
                "required": false
              }
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VCClaim"
            }
          }
        },
        "required": [
          "name",
          "claims"
        ]
      },
      "GetVCTemplatesResponseDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
          },
          "version": {
            "type": "string",
            "example": "1.0"
          },
          "name": {
            "type": "string",
            "example": "vaccination"
          },
          "description": {
            "type": "string",
            "example": "백신접종 증명서"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "version",
          "name",
          "createdAt"
        ]
      },
      "GetVCTemplateByIdResponseDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
          },
          "version": {
            "type": "string",
            "example": "1.0"
          },
          "name": {
            "type": "string",
            "example": "vaccination"
          },
          "description": {
            "type": "string",
            "example": "백신접종 증명서"
          },
          "claims": {
            "example": [
              {
                "name": "brand",
                "description": "백신 이름",
                "type": "string",
                "optional": false
              },
              {
                "name": "doseNum",
                "description": "백신 접종 차수",
                "type": "number",
                "optional": false
              },
              {
                "name": "doseDate",
                "description": "백신 접종 일자",
                "type": "string",
                "optional": false
              },
              {
                "name": "clinic",
                "description": "백신 접종기관 이름",
                "type": "string",
                "optional": true
              }
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VCClaim"
            }
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true,
            "example": null
          }
        },
        "required": [
          "id",
          "version",
          "name",
          "claims",
          "createdAt"
        ]
      },
      "CreateVCRequestBodyDTO": {
        "type": "object",
        "properties": {
          "vcTemplateId": {
            "type": "string",
            "format": "uuid",
            "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
          }
        },
        "required": [
          "vcTemplateId"
        ]
      },
      "VCTemplate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
          },
          "name": {
            "type": "string",
            "example": "vaccination"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "GetVCIssueanceRequestReponseDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "0f50dbd1-c048-4d82-8d9e-cdc0409a2942"
          },
          "holderDID": {
            "type": "string",
            "example": "did:infra:01:PUB_K1_8KeFXUKBR9kctm3eafs2tgqK3XxcqsnHtRp2kjSdfDFSn3x4bK"
          },
          "vcTemplate": {
            "$ref": "#/components/schemas/VCTemplate"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "approved",
              "rejected",
              "canceled"
            ]
          },
          "requestedAt": {
            "format": "date-time",
            "type": "string"
          },
          "issuedVCId": {
            "type": "string",
            "nullable": true,
            "example": null
          },
          "closedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true,
            "example": null
          }
        },
        "required": [
          "id",
          "holderDID",
          "vcTemplate",
          "status",
          "requestedAt",
          "issuedVCId",
          "closedAt"
        ]
      },
      "ApproveVCIssuanceRequestResponseDTO": {
        "type": "object",
        "properties": {
          "issuedVCId": {
            "type": "string",
            "example": "did:infra:01:PUB_K1_7jCDarXnZ3SdPAwfFEciTSyUzA4fnfnktvFH9Fj7J89UrFiHpt"
          }
        },
        "required": [
          "issuedVCId"
        ]
      },
      "GetVCsResponseDTO": {
        "type": "object",
        "properties": {
          "holderDID": {
            "type": "string",
            "example": "did:infra:01:PUB_K1_8KeFXUKBR9kctm3eafs2tgqK3XxcqsnHtRp2kjSdfDFSn3x4bK"
          },
          "vcTemplateId": {
            "type": "string",
            "format": "uuid",
            "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
          },
          "vc": {
            "type": "string",
            "format": "jwt",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
          },
          "issuedAt": {
            "format": "date-time",
            "type": "string"
          },
          "revokedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true,
            "example": null
          }
        },
        "required": [
          "holderDID",
          "vcTemplateId",
          "vc",
          "issuedAt",
          "revokedAt"
        ]
      },
      "CreateVPTemplateBodyDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "방역패스(식당)"
          },
          "description": {
            "type": "string",
            "example": "정부의 코로나19 확산방지 정책에 따라 시설(식당) 이용자의 백신접종 유무를 확인하기 위함."
          },
          "version": {
            "type": "string",
            "default": "1.0",
            "example": "1.0"
          },
          "vcTemplateIds": {
            "example": [
              "b7d3727c-3b27-45f6-acf5-3f87c81071cb",
              "405b194b-2024-45f0-8734-4c4bc5479e0e"
            ],
            "type": "array",
            "items": {
              "type": "array",
              "format": "uuid"
            }
          }
        },
        "required": [
          "name",
          "vcTemplateIds"
        ]
      },
      "GetVPTemplatesResponseDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "UUID",
            "example": "10008b83-b4dd-4ce7-acc7-5473f0cccad3"
          },
          "name": {
            "type": "string",
            "example": "방역패스(식당)"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "GetVPTemplateByIdResponseDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "UUID",
            "example": "10008b83-b4dd-4ce7-acc7-5473f0cccad3"
          },
          "name": {
            "type": "string",
            "example": "방역패스(식당)"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "example": "정부의 코로나19 확산방지 정책에 따라 시설(식당) 이용자의 백신접종 유무를 확인하기 위함."
          },
          "version": {
            "type": "string",
            "example": "1.0"
          },
          "vcTemplates": {
            "example": [
              {
                "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                "version": "1.0",
                "name": "vaccination",
                "description": "백신접종 증명서",
                "claims": [
                  {
                    "name": "brand",
                    "description": "백신 이름",
                    "type": "string",
                    "optional": false
                  },
                  {
                    "name": "doseNum",
                    "description": "백신 접종 차수",
                    "type": "number",
                    "optional": false
                  },
                  {
                    "name": "doseDate",
                    "description": "백신 접종 일자",
                    "type": "string",
                    "optional": false
                  },
                  {
                    "name": "clinic",
                    "description": "백신 접종기관 이름",
                    "type": "string",
                    "optional": true
                  }
                ],
                "createdAt": "2022-12-15T07:00:30.623Z",
                "deletedAt": null
              }
            ],
            "type": "array",
            "items": {
              "type": "array"
            }
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true,
            "example": null
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "version",
          "vcTemplates",
          "createdAt",
          "updatedAt",
          "deletedAt"
        ]
      },
      "EditVPTemplateBodyDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "version": {
            "type": "string",
            "example": "1.1"
          },
          "vcTemplateIds": {
            "example": [
              "b7d3727c-3b27-45f6-acf5-3f87c81071cb",
              "405b194b-2024-45f0-8734-4c4bc5479e0e",
              "4fee3d6b-2949-42ff-b801-5cfd9c174cea"
            ],
            "type": "array",
            "items": {
              "type": "array",
              "format": "UUID"
            }
          }
        }
      },
      "CreateVPVerificationRequestBodyDTO": {
        "type": "object",
        "properties": {
          "vpTemplateId": {
            "type": "string",
            "format": "UUID",
            "example": "182bcbb0-7827-4905-9893-78707d8b728c"
          },
          "horderDID": {
            "type": "string",
            "format": "InfraDID",
            "example": "did:infra:01:PUB_K1_8KeFXUKBR9kctm3eafs2tgqK3XxcqsnHtRp2kjSdfDFSn3x4bK"
          }
        },
        "required": [
          "vpTemplateId",
          "horderDID"
        ]
      },
      "GetVPVerificationRequestsResponseDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "UUID",
            "example": "d7470246-1ea7-4686-b495-67d65013a9d5"
          },
          "holderDID": {
            "type": "string",
            "format": "InfraDID",
            "example": "did:infra:01:PUB_K1_7jCDarXnZ3SdPAwfFEciTSyUzA4fnfnktvFH9Fj7J89UrFiHpt"
          },
          "verifierDID": {
            "type": "string",
            "format": "InfraDID",
            "example": "did:infra:01:PUB_K1_8KeFXUKBR9kctm3eafs2tgqK3XxcqsnHtRp2kjSdfDFSn3x4bK"
          },
          "status": {
            "type": "string",
            "example": "vpSubmitted"
          },
          "result": {
            "type": "string",
            "example": "passed"
          }
        },
        "required": [
          "id",
          "holderDID",
          "verifierDID",
          "status",
          "result"
        ]
      },
      "Verifier": {
        "type": "object",
        "properties": {
          "did": {
            "type": "string",
            "format": "InfraDID",
            "example": "did:infra:01:PUB_K1_8KeFXUKBR9kctm3eafs2tgqK3XxcqsnHtRp2kjSdfDFSn3x4bK"
          },
          "name": {
            "type": "string",
            "example": "한성돈까스"
          },
          "adress": {
            "type": "string",
            "nullable": true,
            "example": "서울특별시 서초구 서초대로78길 36 강남지웰타워 103호"
          },
          "email": {
            "type": "string",
            "nullable": true,
            "example": null
          },
          "phone": {
            "type": "string",
            "nullable": true,
            "example": "02-521-6020"
          }
        },
        "required": [
          "did",
          "name",
          "adress",
          "email",
          "phone"
        ]
      },
      "GetVPVerificationRequestByIdResponseDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "UUID",
            "example": "18dfe477-70c2-4ef2-94ab-2578b8970525"
          },
          "holderDID": {
            "type": "string",
            "format": "InfraDID",
            "example": "did:infra:01:PUB_K1_7jCDarXnZ3SdPAwfFEciTSyUzA4fnfnktvFH9Fj7J89UrFiHpt"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "vpSubmitted",
              "rejected",
              "canceled"
            ],
            "example": "pending"
          },
          "verifier": {
            "$ref": "#/components/schemas/Verifier"
          },
          "requestedAt": {
            "format": "date-time",
            "type": "string"
          },
          "vpSubmitedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true,
            "example": null
          },
          "canceledAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true,
            "example": null
          }
        },
        "required": [
          "id",
          "holderDID",
          "status",
          "verifier",
          "requestedAt",
          "vpSubmitedAt",
          "canceledAt"
        ]
      },
      "SubmitVPBodyDTO": {
        "type": "object",
        "properties": {
          "vp": {
            "type": "string",
            "format": "jwt",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
          }
        },
        "required": [
          "vp"
        ]
      },
      "VerifyVPBodyDTO": {
        "type": "object",
        "properties": {
          "didConnectRequestMeesage": {
            "type": "string",
            "format": "jwt",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
          },
          "vpTemplateId": {
            "type": "string",
            "format": "UUID",
            "example": "1704f160-28d7-4264-bedb-53ba09cc5724"
          }
        },
        "required": [
          "didConnectRequestMeesage",
          "vpTemplateId"
        ]
      },
      "GetVerificationHistoriesResponseDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "UUID",
            "example": "6f307a10-2342-4140-9c13-a651531f325d"
          },
          "holderDID": {
            "type": "string",
            "format": "InfraDID",
            "example": "did:infra:01:PUB_K1_7jCDarXnZ3SdPAwfFEciTSyUzA4fnfnktvFH9Fj7J89UrFiHpt"
          },
          "verifierDID": {
            "type": "string",
            "format": "InfraDID",
            "example": "did:infra:01:PUB_K1_8KeFXUKBR9kctm3eafs2tgqK3XxcqsnHtRp2kjSdfDFSn3x4bK"
          },
          "result": {
            "type": "string",
            "example": "failed"
          },
          "verifiedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "holderDID",
          "verifierDID",
          "result",
          "verifiedAt"
        ]
      },
      "VerificationTemplate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "UUID",
            "example": "10008b83-b4dd-4ce7-acc7-5473f0cccad3"
          },
          "name": {
            "type": "string",
            "example": "방역패스(식당)"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "GetVerificationHistoryByIdResponseDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "UUID",
            "example": "1cdb7e0f-558b-45ee-a150-47038b013191"
          },
          "holderDID": {
            "type": "string",
            "format": "InfraDID",
            "example": "did:infra:01:PUB_K1_7jCDarXnZ3SdPAwfFEciTSyUzA4fnfnktvFH9Fj7J89UrFiHpt"
          },
          "verifier": {
            "$ref": "#/components/schemas/Verifier"
          },
          "verificationTemplate": {
            "$ref": "#/components/schemas/VerificationTemplate"
          },
          "result": {
            "type": "string",
            "example": "passed"
          },
          "submittedVCs": {
            "example": [
              "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
            ],
            "type": "array",
            "items": {
              "type": "string",
              "format": "jwt"
            }
          },
          "verifiedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "holderDID",
          "verifier",
          "verificationTemplate",
          "result",
          "submittedVCs",
          "verifiedAt"
        ]
      }
    }
  }
}